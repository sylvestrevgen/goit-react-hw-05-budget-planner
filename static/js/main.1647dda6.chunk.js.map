{"version":3,"sources":["components/Stat/stat.module.css","components/ExpensesTable/expensesTable.module.css","components/App/app.module.css","components/Values/values.module.css","redux/actionTypes.js","redux/reducers.js","redux/store.js","components/BudgetForm/BudgetForm.jsx","components/BudgetForm/BudgetFormContainer.js","redux/actions.js","redux/selectors.js","components/Stat/Stat.jsx","components/Values/Values.jsx","components/Values/ValuesContainer.jsx","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseFormContainer.js","components/ExpensesTable/ExpensesTable.jsx","components/ExpensesTable/ExpensesTableContainer.js","components/App/App.jsx","components/App/AppContainer.js","index.js","components/ExpenseForm/expenseForm.module.css","components/BudgetForm/budgetForm.module.css"],"names":["module","exports","actionTypes","SAVE_BUDGET","ADD_EXPENSE","DELETE_EXPENSE","combineReducers","budget","state","type","payload","value","expenses","expense","filter","id","store","createStore","reducer","devToolsEnhancer","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSave","Number","this","className","styles","form","onSubmit","htmlFor","label","style","marginBottom","input","onChange","button","Component","connect","dispatch","saveBudget","getBudget","getExpenses","getExpensesValue","reduce","total","amount","getBalance","Stat","statCustomStyles","color","isPositive","stat","defaultProps","Values","balance","values","selectors","ExpenseForm","name","shortid","generate","addExpense","ExpensesTable","items","onRemove","table","tr","th","map","key","td","onClick","deleteExpense","App","app","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1647dda6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"stat_stat__24KJQ\",\"label\":\"stat_label__3NWPV\",\"value\":\"stat_value__28DFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"expensesTable_table__2bd_M\",\"tr\":\"expensesTable_tr__KzWXp\",\"td\":\"expensesTable_td__3EjRX\",\"th\":\"expensesTable_th__32YEL\",\"button\":\"expensesTable_button__-ymqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__WPEG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"values\":\"values_values__2D0GK\"};","const actionTypes = {\n  SAVE_BUDGET: 'SAVE_BUDGET',\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n};\n\nexport default actionTypes;\n","import { combineReducers } from 'redux';\nimport actionTypes from './actionTypes';\n\nconst budgetReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case actionTypes.SAVE_BUDGET:\n      return payload.value;\n\n    default:\n      return state;\n  }\n};\n\nconst expensesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD_EXPENSE:\n      return [...state, payload.expense];\n\n    case actionTypes.DELETE_EXPENSE:\n      return state.filter(expense => expense.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  budget: budgetReducer,\n  expenses: expensesReducer,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, devToolsEnhancer());\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './budgetForm.module.css';\n\nexport default class BudgetForm extends Component {\n  state = { budget: 0 };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(Number(this.state.budget));\n\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label\n          htmlFor=\"budgetInput\"\n          className={styles.label}\n          style={{ marginBottom: '16px' }}\n        >\n          Enter your total budget\n          <input\n            id=\"budgetInput\"\n            type=\"number\"\n            className={styles.input}\n            value={budget}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { saveBudget } from '../../redux/actions';\nimport BudgetForm from './BudgetForm';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(saveBudget(value)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(BudgetForm);\n","import actionTypes from './actionTypes';\n\nexport const saveBudget = value => ({\n  type: actionTypes.SAVE_BUDGET,\n  payload: {\n    value,\n  },\n});\n\nexport const addExpense = expense => ({\n  type: actionTypes.ADD_EXPENSE,\n  payload: {\n    expense,\n  },\n});\n\nexport const deleteExpense = id => ({\n  type: actionTypes.DELETE_EXPENSE,\n  payload: {\n    id,\n  },\n});\n","export const getBudget = state => state.budget;\n\nexport const getExpenses = state => state.expenses;\n\nexport const getExpensesValue = state => {\n  const expenses = getExpenses(state);\n  return expenses.reduce((total, expense) => total + expense.amount, 0);\n};\n\nexport const getBalance = state => {\n  const budget = getBudget(state);\n  const expensesValue = getExpensesValue(state);\n  return budget - expensesValue;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './stat.module.css';\n\nconst Stat = ({ label, value, isPositive }) => {\n  const statCustomStyles = {\n    color: isPositive ? '#388E3C' : '#D32F2F',\n  };\n\n  return (\n    <div className={styles.stat} style={statCustomStyles}>\n      <p className={styles.label}>{label}</p>\n      <p className={styles.value}>{value}&nbsp;&#x24;</p>\n    </div>\n  );\n};\n\nStat.defaultProps = {\n  isPositive: false,\n};\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './values.module.css';\nimport Stat from '../Stat/Stat';\n\nconst Values = ({ budget, expenses, balance }) => (\n  <section className={styles.values}>\n    <Stat label=\"Budget\" value={budget} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </section>\n);\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","import { connect } from 'react-redux';\nimport * as selectors from '../../redux/selectors';\nimport Values from './Values';\n\nconst mapStateToProps = state => ({\n  budget: selectors.getBudget(state),\n  expenses: selectors.getExpensesValue(state),\n  balance: selectors.getBalance(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './expenseForm.module.css';\n\nexport default class ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { name, amount } = this.state;\n    e.preventDefault();\n\n    const expense = {\n      id: shortid.generate(),\n      name,\n      amount: Number(amount),\n    };\n\n    this.props.onSave(expense);\n\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label\n          htmlFor=\"expenseNameInput\"\n          className={styles.label}\n          style={{ marginBottom: '16px' }}\n        >\n          Enter expense name\n          <input\n            id=\"expenseAmountInput\"\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label\n          htmlFor=\"expenseNameInput\"\n          className={styles.label}\n          style={{ marginBottom: '16px' }}\n        >\n          Enter expense amount\n          <input\n            id=\"expenseAmountInput\"\n            type=\"number\"\n            name=\"amount\"\n            className={styles.input}\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { addExpense } from '../../redux/actions';\nimport ExpenseForm from './ExpenseForm';\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: expense => dispatch(addExpense(expense)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './expensesTable.module.css';\n\nconst ExpensesTable = ({ items, onRemove }) => (\n  <table className={styles.table}>\n    <thead>\n      <tr className={styles.tr}>\n        <th className={styles.th}>Expense name</th>\n        <th className={styles.th}>Expense amount</th>\n        <th className={styles.th} />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id} className={styles.tr}>\n          <td className={styles.td}>{name}</td>\n          <td className={styles.td}>{amount}</td>\n          <td className={styles.td}>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => onRemove(id)}\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nExpensesTable.defaultProps = {\n  items: [],\n};\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport { deleteExpense } from '../../redux/actions';\nimport * as selectors from '../../redux/selectors';\nimport ExpensesTable from './ExpensesTable';\n\nconst mapStateToProps = state => ({\n  items: selectors.getExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(deleteExpense(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './app.module.css';\nimport BudgetForm from '../BudgetForm/BudgetFormContainer';\nimport Values from '../Values/ValuesContainer';\nimport ExpenseForm from '../ExpenseForm/ExpenseFormContainer';\nimport ExpensesTable from '../ExpensesTable/ExpensesTableContainer';\n\nconst App = ({ expenses }) => (\n  <div className={styles.app}>\n    <BudgetForm />\n    <Values />\n    <ExpenseForm />\n    {expenses.length > 0 && <ExpensesTable />}\n  </div>\n);\n\nApp.defaultProps = {\n  expenses: [],\n};\n\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport * as selectors from '../../redux/selectors';\n\nconst mapStateToProps = state => ({\n  expenses: selectors.getExpenses(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/AppContainer';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"expenseForm_button__3gmvy\",\"form\":\"expenseForm_form__O0yff\",\"label\":\"expenseForm_label__3JgOh\",\"input\":\"expenseForm_input__1Fcs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"budgetForm_button__3iBWu\",\"form\":\"budgetForm_form__EOIHP\",\"label\":\"budgetForm_label__39Eo7\",\"input\":\"budgetForm_input__1CdKF\"};"],"sourceRoot":""}